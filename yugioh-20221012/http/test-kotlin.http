### Kotlin status endpoint
GET http://localhost:8080/kotlin/api/v1.0/status

> {%
client.test("Request executed successfully", function() {
    client.log(client.global.get("bearerTokenV").toString());
    client.log(client.global.get("bearerTokenQ").toString());
    client.log(client.global.get("bearerTokenM").toString());
    client.log(client.global.get("uuid").toString());
  client.assert(response.status === 200, "Response status is not 200");
});
%}


### Vincent Login
POST http://localhost:8080/java/api/v1.0/auth:login
Content-Type: application/json

{
  "username": "vincent",
  "password": "123456"
}

> {% client.global.set("bearerTokenV", response.headers.valueOf("Authorization")); %}


### qrtt1 Login
POST http://localhost:8080/java/api/v1.0/auth:login
Content-Type: application/json

{
  "username": "qrtt1",
  "password": "123456"
}

> {% client.global.set("bearerTokenQ", response.headers.valueOf("Authorization")); %}


### Musk Login
POST http://localhost:8080/java/api/v1.0/auth:login
Content-Type: application/json

{
  "username": "musk",
  "password": "123456"
}

> {% client.global.set("bearerTokenM", response.headers.valueOf("Authorization")); %}


### Vincent Join Games
POST http://localhost:8080/java/api/v1.0/duelField:join
Authorization: Bearer {{bearerTokenV}}

> {% client.global.set("uuid", response.body.duelFieldUuid.toString()); %}


### qrtt1 Join Games
POST http://localhost:8080/java/api/v1.0/duelField:join
Authorization: Bearer {{bearerTokenQ}}


### Vincent Get DuelField By Uuid (Duelist)
GET http://localhost:8080/java/api/v1.0/duelField/{{uuid}}
Authorization: Bearer {{bearerTokenV}}


### Musk Get DuelField By Uuid
GET http://localhost:8080/java/api/v1.0/duelField/{{uuid}}
Authorization: Bearer {{bearerTokenM}}


### Vincent Draw Card
POST http://localhost:8080/java/api/v1.0/duelField/{{uuid}}/left:drawCard
Authorization: Bearer {{bearerTokenV}}


### Vincent Summon Monster
POST http://localhost:8080/java/api/v1.0/duelField/{{uuid}}/left:summonMonster
Authorization: Bearer {{bearerTokenV}}
Content-Type: application/json

{
  "uuid": "cf889eb6-01bc-4ff7-b4da-f1e3040e7efb"
}


### Vincent Apply Spell
POST http://localhost:8080/java/api/v1.0/duelField/{{uuid}}/left:applySpell
Authorization: Bearer {{bearerTokenV}}
Content-Type: application/json

{
  "uuid": "f438be30-39db-4a95-9b9a-fb5939731650"
}


### Vincent Cover Trap
POST http://localhost:8080/java/api/v1.0/duelField/{{uuid}}/left:coverTrap
Authorization: Bearer {{bearerTokenV}}
Content-Type: application/json

{
  "uuid": "4dc4120a-a8c4-4dec-b2e3-3f5c5b138a1d",
  "state": "BACK"
}

### Vincent Start Battle
POST http://localhost:8080/java/api/v1.0/duelField/{{uuid}}/left:startBattle
Authorization: Bearer {{bearerTokenV}}
Content-Type: application/json

{
  "uuid": ""
}


### qrtt1 Draw Card
POST http://localhost:8080/java/api/v1.0/duelField/{{uuid}}/right:drawCard
Authorization: Bearer {{bearerTokenQ}}


### qrtt1 Summon Monster
POST http://localhost:8080/java/api/v1.0/duelField/{{uuid}}/right:summonMonster
Authorization: Bearer {{bearerTokenQ}}
Content-Type: application/json

{
  "uuid": ""
}


### qrtt1 Apply Spell
POST http://localhost:8080/java/api/v1.0/duelField/{{uuid}}/right:applySpell
Authorization: Bearer {{bearerTokenQ}}
Content-Type: application/json

{
  "uuid": ""
}


### qrtt1 Cover Trap
POST http://localhost:8080/java/api/v1.0/duelField/{{uuid}}/right:coverTrap
Authorization: Bearer {{bearerTokenQ}}
Content-Type: application/json

{
  "uuid": "",
  "state": "BACK"
}

### qrtt1 Start Battle
POST http://localhost:8080/java/api/v1.0/duelField/{{uuid}}/right:startBattle
Authorization: Bearer {{bearerTokenQ}}
Content-Type: application/json

{
  "uuid": ""
}
