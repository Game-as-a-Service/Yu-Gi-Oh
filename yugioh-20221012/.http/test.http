### Vincent Login
POST http://localhost:8080/java/api/v1.0/auth:login
Content-Type: application/json

{
  "username": "vincent",
  "password": "123456"
}

> {%
    client.global.set("bearerTokenV", response.body.token.toString());
%}


### qrtt1 Login
POST http://localhost:8080/java/api/v1.0/auth:login
Content-Type: application/json

{
  "username": "qrtt1",
  "password": "123456"
}

> {%
    client.global.set("bearerTokenQ", response.body.token.toString());
%}


### Musk Login
#POST http://localhost:8080/java/api/v1.0/auth:login
#Content-Type: application/json
#
#{
#  "username": "musk",
#  "password": "123456"
#}
#
#> {%
#    client.global.set("bearerTokenM", response.body.token.toString());
#%}


### Vincent Join Games
POST http://localhost:8080/java/api/v1.0/duelField:join
Authorization: Bearer {{bearerTokenV}}

> {%
    client.global.set("uuid", response.body.duelFieldUuid.toString());
%}


### qrtt1 Join Games
POST http://localhost:8080/java/api/v1.0/duelField:join
Authorization: Bearer {{bearerTokenQ}}


### Java status endpoint
GET http://localhost:8080/java/api/v1.0/status

> {%
    client.test("Request executed successfully", function () {
        client.log(client.global.get("bearerTokenV").toString());
        client.log(client.global.get("bearerTokenQ").toString());
        // client.log(client.global.get("bearerTokenM").toString());
        client.log(client.global.get("uuid").toString());
        client.assert(response.status === 200, "Response status is not 200");
    });
%}


### Vincent Get DuelField By Uuid (Duelist)
GET http://localhost:8080/java/api/v1.0/duelField/{{uuid}}
Authorization: Bearer {{bearerTokenV}}


### qrtt1 Get DuelField By Uuid (Duelist)
GET http://localhost:8080/java/api/v1.0/duelField/{{uuid}}
Authorization: Bearer {{bearerTokenQ}}


#### Musk Get DuelField By Uuid
#GET http://localhost:8080/java/api/v1.0/duelField/{{uuid}}
#Authorization: Bearer {{bearerTokenM}}


### Get DuelField By Uuid SSE
GET http://localhost:8080/java/api/v1.0/duelField/{{uuid}}:sse
Authorization: Bearer {{bearerTokenV}}
Content-Type: text/event-stream


### Vincent Draw Card
POST http://localhost:8080/java/api/v1.0/duelField/{{uuid}}/LEFT:drawCard
Authorization: Bearer {{bearerTokenV}}


### Vincent Summon Monster
POST http://localhost:8080/java/api/v1.0/duelField/{{uuid}}/LEFT:summonMonster
Authorization: Bearer {{bearerTokenV}}
Content-Type: application/json

{
  "uuid": "cdba5b3e-be63-4b96-997a-962670991a18"
}


### Vincent Apply Spell
POST http://localhost:8080/java/api/v1.0/duelField/{{uuid}}/LEFT:applySpell
Authorization: Bearer {{bearerTokenV}}
Content-Type: application/json

{
  "uuid": "31fbedcd-df7e-4b5c-bb78-cff0a48a10dd"
}


### Vincent Cover Trap
POST http://localhost:8080/java/api/v1.0/duelField/{{uuid}}/LEFT:coverTrap
Authorization: Bearer {{bearerTokenV}}
Content-Type: application/json

{
  "uuid": "152927b0-6a4d-4baa-828d-5d65b2ef58a8",
  "state": "BACK"
}


### Vincent Start Battle
POST http://localhost:8080/java/api/v1.0/duelField/{{uuid}}/LEFT:startBattle
Authorization: Bearer {{bearerTokenV}}
Content-Type: application/json

{
  "uuid": "0f11eac8-2a89-45fb-bde8-9a157694e843"
}


### qrtt1 Draw Card
POST http://localhost:8080/java/api/v1.0/duelField/{{uuid}}/RIGHT:drawCard
Authorization: Bearer {{bearerTokenQ}}


### qrtt1 Summon Monster
POST http://localhost:8080/java/api/v1.0/duelField/{{uuid}}/RIGHT:summonMonster
Authorization: Bearer {{bearerTokenQ}}
Content-Type: application/json

{
  "uuid": "64967479-cd92-4b8d-88d8-ce4f3804e3c0"
}


### qrtt1 Apply Spell
POST http://localhost:8080/java/api/v1.0/duelField/{{uuid}}/RIGHT:applySpell
Authorization: Bearer {{bearerTokenQ}}
Content-Type: application/json

{
  "uuid": "d968a1bd-bc5b-4797-be23-1ea4fd5cb2f5"
}


### qrtt1 Cover Trap
POST http://localhost:8080/java/api/v1.0/duelField/{{uuid}}/RIGHT:coverTrap
Authorization: Bearer {{bearerTokenQ}}
Content-Type: application/json

{
  "uuid": "13a0291b-74b6-4c9a-ba68-f7f0cb7e31bb",
  "state": "BACK"
}


### qrtt1 Start Battle
POST http://localhost:8080/java/api/v1.0/duelField/{{uuid}}/RIGHT:startBattle
Authorization: Bearer {{bearerTokenQ}}
Content-Type: application/json

{
  "uuid": "9c67000f-feac-4024-ad7a-632ac89d9fa0"
}
